knitr::opts_chunk$set(echo = TRUE)
library(alr4)
lm1 <- lm(wblake$Length~wblake$Scale)
library(alr4)
data(wblake)
age_dt <- unique(wblake$Age)
leng_mean_dt <- numeric(length(age_dt))
for (i in age_dt) {
leng_mean_dt[i] <- mean(wblake$Length[wblake$Age == i])
}
age_leng_mean_df <- data.frame(age_dt, leng_mean_dt)
plot(age_leng_mean_df, pch=16, ylab='Mean Length', xlab='Age', main='Age vs Mean of Length')
abline(lm1)
plot(wblake$Scale, wblake$Length, pch=16, cex=0.5,
xlab='Scale', ylab='Length' )
abline(lm1)
lm1 <- lm(wblake$Length~wblake$Scale)
abline(lm1)
plot(wblake$Scale, wblake$Length, pch=16, cex=0.5,
xlab='Scale', ylab='Length' )
abline(lm1)
lm1 <- lm(wblake$Length~wblake$Scale)
summary(lm1)
plot(wblake$Scale, wblake$Length, pch=16, cex=0.5,
xlab='Scale', ylab='Length' )
abline(lm1)
plot(wblake$Scale, wblake$Length, pch=16, cex=0.5,
xlab='Scale', ylab='Length' )
abline(lm(wblake$Length~wblake$Scale))
abline(v = 100)
plot(wblake$Scale, wblake$Length, pch=16, cex=0.5,
xlab='Scale', ylab='Length' )
abline(lm1)
abline(lm1, col=2)
plot(wblake$Scale, wblake$Length, pch=16, cex=0.5,
xlab='Scale', ylab='Length' )
abline(lm1, col=2)
library(alr4)
data(wblake)
age_dt <- unique(wblake$Age)
leng_mean_dt <- numeric(length(age_dt))
for (i in age_dt) {
leng_mean_dt[i] <- mean(wblake$Length[wblake$Age == i])
}
age_leng_mean_df <- data.frame(age_dt, leng_mean_dt)
plot(age_leng_mean_df, pch=16, ylab='Mean Length', xlab='Age', main='Age vs Mean of Length')
library(alr4)
data(wblake)
age_dt <- unique(wblake$Age)
leng_mean_dt <- numeric(length(age_dt))
for (i in age_dt) {
leng_mean_dt[i] <- mean(wblake$Length[wblake$Age == i])
}
age_leng_mean_df <- data.frame(age_dt, leng_mean_dt)
plot(age_leng_mean_df, pch=16, ylab='Mean Length', xlab='Age', main='Age vs Mean of Length')
lm1 <- lm(wblake$Length~wblake$Scale)
plot(wblake$Scale, wblake$Length, pch=16, cex=0.5,
xlab='Scale', ylab='Length' )
abline(lm1, col=2)
summary(lm1)
library(alr4)
data(wblake)
age_dt <- unique(wblake$Age)
leng_mean_dt <- numeric(length(age_dt))
for (i in age_dt) {
leng_mean_dt[i] <- mean(wblake$Length[wblake$Age == i])
}
age_leng_mean_df <- data.frame(age_dt, leng_mean_dt)
plot(age_leng_mean_df, pch=16, ylab='Mean Length', xlab='Age', main='Age vs Mean of Length')
length
fish
length()
Age
data(wblake)
Age
library(wblake)
resid1 <- summary(lm1)$residuals
resid1
plot(rresid1)
plot(resid1)
plot(lm(wblake$Length~wblake$Scale), which = 1)
plot(lm(wblake$Length~wblake$Scale), which = 1)
resid1 <- summary(lm1)$residual
hist(resid1)
hist(resid1, xlab='Residuals', main='Histogram of Residuals')
hist(resid1, xlab='Residuals', main='Histogram of Residuals', xlim=c(0, 100))
hist(resid1, xlab='Residuals', main='Histogram of Residuals', xlim=c(-100, 100))
qqplot(resid1)
qqnorm(resid1)
plot(lm(wblake$Length~wblake$Scale), which = 1)
plot(lm(wblake$Length~wblake$Scale), which = 1)
library(alr4)
age_dt <- unique(wblake$Age)
leng_mean_dt <- numeric(length(age_dt))
for (i in age_dt) {
leng_mean_dt[i] <- mean(wblake$Length[wblake$Age == i])
}
age_leng_mean_df <- data.frame(age_dt, leng_mean_dt)
plot(age_leng_mean_df, pch=16, ylab='Mean Length', xlab='Age', main='Age vs Mean of Length')
plot(age_leng_mean_df, pch=16, ylab='Mean Length', xlab='Age', main='Age vs Mean of Length')
summary(lm1)
summary(lm1)
plot(age_leng_sd_df, pch=16, ylab='SD of Length', xlab='Age', main='Age vs SD of Length')
## 1-b
leng_sd_dt <- numeric(length(age_dt))
for (i in age_dt) {
leng_sd_dt[i] <- sd(wblake$Length[wblake$Age == i])
}
age_leng_sd_df <- data.frame(age_dt, leng_sd_dt)
plot(age_leng_sd_df, pch=16, ylab='SD of Length', xlab='Age', main='Age vs SD of Length')
plot(wblake$Scale, wblake$Length, pch=16, cex=0.5,
xlab='Scale', ylab='Length' )
abline(lm1, col=2)
## 1-d
resid1 <- summary(lm1)$residual
hist(resid1, xlab='Residuals', main='Histogram of Residuals', xlim=c(-100, 100))
plot(lm(wblake$Length~wblake$Scale), which = 1)
plot(lm(wblake$Length~wblake$Scale), which = 1, pch=16)
plot(lm(wblake$Length~wblake$Scale), which = 1, pch=12)
plot(lm(wblake$Length~wblake$Scale), which = 1, pch=16)
## 1-e
pred_200 <- predict(lm1, 200, se.fit = T, )$fit
## 1-e
new_pt <- data.frame(Scale=200)
new_pt
pred_200 <- predict(lm1, new_pt, se.fit = T, )$fit
fit <- lm(Length~Scale, data=wblake)
pred_200 <- predict(fit, new_pt, se.fit = T, )$fit
pred_200
pred_200_CI <- predict(fit, new_pt, interval = 'confidence')
pred_200_PI <- predict(fit, new_pt, interval = 'prediction')
pred_200
pred_200_CI
pred_200_PI
pred_200_CI <- predict(fit, new_pt, interval = 'confidence', level=0.95)
pred_200_CI
summary(UN1)
head(UN1)
## 2-b
plot(x=UN1$PPgdp, y=UN1$Fertility, xlab='GDP/Person', ylab='Fertility')
## 2-b
plot(x=UN1$PPgdp, y=UN1$Fertility, xlab='GDP/Person', ylab='Fertility', pch=0.1)
## 2-b
plot(x=UN1$PPgdp, y=UN1$Fertility, xlab='GDP/Person', ylab='Fertility', pch=16, pt.cex=0.5)
## 2-b
plot(x=UN1$PPgdp, y=UN1$Fertility, xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.5)
## 2-b
plot(x=UN1$PPgdp, y=UN1$Fertility, xlab='GDP/Person', ylab='Fertility', pch=16, cex=1)
## 2-b
plot(x=UN1$PPgdp, y=UN1$Fertility, xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=UN1$PPgdp, y=UN1$Fertility, log=c('x', 'y'), xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
plot(x=log(UN1$PPgdp), y=log(UN1$Fertility), xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=UN1$PPgdp, y=UN1$Fertility, log=c('x', 'y'), xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=UN1$PPgdp, y=UN1$Fertility, log='y', xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=UN1$PPgdp, y=UN1$Fertility, log='y', log='x', xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=log(UN1$PPgdp), y=UN1$Fertility, log='y', xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=log(UN1$PPgdp), y=log(UN1$Fertility), xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=UN1$PPgdp, y=log(UN1$Fertility), xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=UN1$PPgdp, y=log(UN1$Fertility), log='x',xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=log(UN1$PPgdp), y=log(UN1$Fertility),xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
## 2-c
plot(x=UN1$PPgdp, y=UN1$Fertility, log='xy', xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
lm2 <- lm(Fertility~PPgdp, data=UN1)
summary(lm2)
abline(lm2)
## 2-c
plot(x=UN1$PPgdp, y=UN1$Fertility, log='xy',
xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
lm2 <- lm(Fertility~PPgdp, data=UN1)
abline(lm2)
lm2 <- lm(log(Fertility)~log(PPgdp), data=UN1)
abline(lm2)
## 2-c
plot(x=UN1$PPgdp, y=UN1$Fertility, log='xy',
xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
lm2 <- lm(log(Fertility)~log(PPgdp), data=UN1)
abline(lm2)
summary(lm2)
lm2$coefficients
lm2$coefficients[1]
lm2$coefficients[[1]]
abline(a=lm2$coefficients[[2]], b=lm2$coefficients[[1]])
lines(a=lm2$coefficients[[2]], b=lm2$coefficients[[1]])
?abline
abline(a=lm2$coefficients[[1]], b=lm2$coefficients[[2]])
abline(a=lm2$coefficients[[1]], b=lm2$coefficients[[2]], col=2)
?abline
## 2-d
plot(x=log(UN1$PPgdp), y=log(UN1$Fertility),
xlab='GDP/Person', ylab='Fertility', pch=16, cex=0.7)
lm2 <- lm(log(Fertility)~log(PPgdp), data=UN1)
abline(a=lm2$coefficients[[1]], b=lm2$coefficients[[2]], col=2)
## 2-d
plot(x=log(UN1$PPgdp), y=log(UN1$Fertility),
xlab='log of GDP/Person', ylab='log of Fertility', pch=16, cex=0.7)
abline(a=lm2$coefficients[[1]], b=lm2$coefficients[[2]], col=2, lty=2)
abline(a=lm2$coefficients[[1]], b=lm2$coefficients[[2]], col=2, lwd=3)
abline(a=lm2$coefficients[[1]], b=lm2$coefficients[[2]], col=2, lwd=2)
## 2-d
plot(x=log(UN1$PPgdp), y=log(UN1$Fertility),
xlab='log of GDP/Person', ylab='log of Fertility', pch=16, cex=0.7)
lm2 <- lm(log(Fertility)~log(PPgdp), data=UN1)
abline(a=lm2$coefficients[[1]], b=lm2$coefficients[[2]], col=2, lwd=2)
summary(lm2)
plot(lm(wblake$Length~wblake$Scale), which = 1, pch=16, cex=0.7)
## 2-e
plot(lm2, which = 1, pch=16, cex=0.7)
## 2-e
plot(lm2, which = 1, pch=16, cex=0.7)
## 2-e
plot(lm(log(Fertility)~log(PPgdp), data=UN1), which = 1, pch=16, cex=0.7)
## 2-e
plot(lm(log(Fertility)~log(PPgdp), data=UN1), which = 1, pch=16)
## 2-e
plot(lm(log(Fertility)~log(PPgdp), data=UN1), which = 1)
## 2-e
hist(lm2$residuals)
plot(lm(log(Fertility)~log(PPgdp), data=UN1), which = 1, pch=16, cex=0.7)
## 2-e
hist(lm2$residuals)
## 2-e
hist(lm2$residuals, xlim=c(-1.5, 1.5), xlab='Residuals', main='Histogram of Residuals')
mean(lm2$residuals)
median(lm2$residuals)
plot(lm(log(Fertility)~log(PPgdp), data=UN1), which = 1, pch=16, cex=0.7)
plot(lm(log(Fertility)~log(PPgdp), data=UN1), which = 1, pch=16, cex=0.7, lwd=2)
lm2
summary(lm2)
summary(lm2)[2]
summary(lm2)[,2]
summary(lm2)[1]
summary(lm2)[1][1]
lm2$coefficients
lm2$rank
summary(lm2)[1]
summary(lm2)[2]
summary(lm2)[1,1]
summary(lm2)[1][1]
summary(lm2)$Coefficients
summary(lm2)
summary(lm2)[Coefficients]
summary(lm2)$Coefficients
summary(lm2)$Residuals
summary(lm2)$Residual
summary(lm2)$coefficient
summary(lm2)$coefficient[2,1]
summary(lm2)$coefficient[2,2]
## 2-f
beta1_est <- summary(lm2)$coefficient[2,1]
beta1_se <- summary(lm2)$coefficients[2,2]
t_val <- (beta1_est - 1) / beta1_se
t_val
pt(t_val)
n <- length(UN1$Fertility)
n
pt(t_val, df=n-2)
qt(t_val, df=191)
t_val <- (beta1_est - 0) / beta1_se
n <- length(UN1$Fertility)
pt(t_val, df=n-2)
t_val
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope",
main="Rice: 90% confidence region and intervals",levels=.9)
abline(h=confint(lm2,level=.99)[2,1],lty=2,lwd=2,col="red")
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope",
main="Rice: 90% confidence region and intervals",levels=.90)
abline(h=confint(lm2,level=.99)[2,1],lty=2,lwd=2,col="red")
abline(h=confint(fit,level=.9)[2,2],lty=2,lwd=2,col="red")
abline(v=confint(fit,level=.9)[1,1],lty=2,lwd=2,col="red")
abline(v=confint(fit,level=.9)[1,2],lty=2,lwd=2,col="red")
abline(h=-0.22)
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope",
main="Rice: 90% confidence region and intervals",levels=.50)
abline(h=confint(lm2,level=.99)[2,1],lty=2,lwd=2,col="red")
abline(h=confint(fit,level=.9)[2,2],lty=2,lwd=2,col="red")
abline(v=confint(fit,level=.9)[1,1],lty=2,lwd=2,col="red")
abline(v=confint(fit,level=.9)[1,2],lty=2,lwd=2,col="red")
abline(h=confint(lm2,level=.9)[2,2],lty=2,lwd=2,col="red")
confint(lm2,level=.99)[2,1]
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope",
main="Rice: 90% confidence region and intervals",levels=.99)
abline(h=confint(lm2,level=.99)[2,1],lty=2,lwd=2,col="red")
abline(h=confint(lm2,level=.99)[2,2],lty=2,lwd=2,col="red")
abline(v=confint(fit,level=.99)[1,1],lty=2,lwd=2,col="red")
abline(v=confint(fit,level=.99)[1,2],lty=2,lwd=2,col="red")
abline(v=confint(lm2,level=.99)[1,2],lty=2,lwd=2,col="red")
abline(v=confint(lm2,level=.99)[1,1],lty=2,lwd=2,col="red")
point(x=1.1, y=-0.2, pch=10)
points(x=1.1, y=-0.2, pch=10)
points(1.1, 0.2, )
points(1.1, 0.2, col='black')
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4)
main="Rice: 90% confidence region and intervals",levels=.99)
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4),
main="Rice: 90% confidence region and intervals",levels=.99)
abline(h=confint(lm2,level=.99)[2,1],lty=2,lwd=2,col="red")
abline(h=confint(lm2,level=.99)[2,2],lty=2,lwd=2,col="red")
abline(v=confint(lm2,level=.99)[1,1],lty=2,lwd=2,col="red")
abline(v=confint(lm2,level=.99)[1,2],lty=2,lwd=2,col="red")
points(1.1, 0.2, col='black')
points(1.1, -0.2, col='black')
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4),
main="Rice: 90% confidence region and intervals",levels=.99, col='mint')
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4),
main="Rice: 90% confidence region and intervals",levels=.99, col='mint')
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4),
main="Rice: 90% confidence region and intervals",levels=.99, col='Mint')
main="Rice: 90% confidence region and intervals",levels=.99, col=#aaffc3)
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4),
main="Rice: 90% confidence region and intervals",levels=.99, col='Green')
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4),
main="Rice: 90% confidence region and intervals",levels=.99, col='Mint')
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4),
main="Rice: 90% confidence region and intervals",levels=.99, col='Skyblue')
abline(h=confint(lm2,level=.99)[2,1],lty=2,lwd=2,col="Lightpink")
points(1.1, -0.2, col='red')
points(1.1, -0.2, col='gray25')
points(1.1, -0.2, col='gray25', pch=16)
points(1.1, -0.2, col='gray25', pch=16, cex=2)
abline(h=confint(lm2,level=.99)[2,2],lty=2,lwd=2,col="Lightpink")
abline(v=confint(lm2,level=.99)[1,1],lty=2,lwd=2,col="Lightpink")
abline(v=confint(lm2,level=.99)[1,2],lty=2,lwd=2,col="Lightpink")
text(1.1, -0.2, pos=1, labels='(1.1, -0.2)', cex=0.5)
text(1.1, -0.2, pos=2, labels='(1.1, -0.2)', cex=1)
text(1.1, -0.2, pos=4, labels='(1.1, -0.2)', cex=1)
## 2-g
confidenceEllipse(lm2,grid=TRUE,xlab="Intercept",ylab="Slope", xlim=c(1.1, 4),
main="Rice: 99% confidence region and intervals",levels=.99, col='Skyblue')
abline(h=confint(lm2,level=.99)[2,1],lty=2,lwd=2,col="Lightpink")
abline(h=confint(lm2,level=.99)[2,2],lty=2,lwd=2,col="Lightpink")
abline(v=confint(lm2,level=.99)[1,1],lty=2,lwd=2,col="Lightpink")
abline(v=confint(lm2,level=.99)[1,2],lty=2,lwd=2,col="Lightpink")
points(1.1, -0.2, col='gray25', pch=16, cex=2)
text(1.1, -0.2, pos=4, labels='(1.1, -0.2)', cex=1)
